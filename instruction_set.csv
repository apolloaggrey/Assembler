INSTRUCTION   ,OPCODE,REGISTER,H_BYTE,L_BYTE  
LDR R1 0xABCD ,0x00  ,REG[0-7],0xAB  ,0xCD    
LDR R1 R2     ,0x01  ,REG[0-7],0x00  ,REG[0-7]
LDR R1 $0xABCD,0x02  ,REG[0-7],0xAB  ,0xCD    
STR R1 $0xABCD,0x10  ,REG[0-7],0xAB  ,0xCD    
STL R1 $0xABCD,0x12  ,REG[0-7],0x00  ,0xCD    
STH R1 $0xABCD,0x13  ,REG[0-7],0xAB  ,0x00    
CMP R1 0xABCD ,0x20  ,REG[0-7],0xAB  ,0xCD    
CMP R1 R2     ,0x21  ,REG[0-7],0x00  ,REG[0-7]
JEQ $0xABCD   ,0x30  ,0x00    ,0xAB  ,0xCD    
JLT $0xABCD   ,0x31  ,0x00    ,0xAB  ,0xCD    
JGT $0xABCD   ,0x32  ,0x00    ,0xAB  ,0xCD    
JMP $0xABCD   ,0x33  ,0x00    ,0xAB  ,0xCD    
ADD R1 R2     ,0x40  ,REG[0-7],0x00  ,REG[0-7]
ADD R1 0xABCD ,0x41  ,REG[0-7],0xAB  ,0xCD    
SUB R1 R2     ,0x42  ,REG[0-7],0x00  ,REG[0-7]
SUB R1 0xABCD ,0x43  ,REG[0-7],0xAB  ,0xCD    
RSH R1 R2     ,0x50  ,REG[0-7],0x00  ,REG[0-7]
RSH R1 0xABCD ,0x51  ,REG[0-7],0xAB  ,0xCD    
LSH R1 R2     ,0x52  ,REG[0-7],0x00  ,REG[0-7]
LSH R1 0xABCD ,0x53  ,REG[0-7],0xAB  ,0xCD    
NOT R1        ,0x54  ,REG[0-7],0x00  ,0x00    
AND R1 R2     ,0x55  ,REG[0-7],0x00  ,REG[0-7]
OR R1 R2      ,0x56  ,REG[0-7],0x00  ,REG[0-7]
XOR R1 R2     ,0x57  ,REG[0-7],0x00  ,REG[0-7]
PUSH R1       ,0x60  ,0x00    ,0x00  ,REG[0-7]
POP R1        ,0x61  ,REG[0-7],0x00  ,0x00    
BIC R1 R2     ,0x62  ,REG[0-7],0x00  ,REG[0-7]
BIS R1 R2     ,0x63  ,REG[0-7],0x00  ,REG[0-7]  
HLT           ,0xFF  ,0xFF    ,0xFF  ,0xFF    
NOP           ,0xFF  ,0xFE    ,0xFF  ,0xFE    